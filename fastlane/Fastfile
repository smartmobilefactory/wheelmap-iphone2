default_platform :ios

platform :ios do

  build_variants_config = JSON.parse(File.read('BuildVariants.json'))
  project_config = build_variants_config["project"]

  before_all do
    import_from_git(url: "git@github.com:smartmobilefactory/SMF-iOS-Fastlane-Commons.git")
  end

  desc "Clean, build the development variant and run the unit tests"
  lane :check_pr do

    # Setup the parameters
    build_variant_config = build_variants_config["targets"]["alpha"]

    # Install Pods
    cocoapods

    # Build only the IPA to test if the project is compiling
    smf_archive_ipa(
      project_config: project_config,
      build_variant_config: build_variant_config
    )
  end

  desc "Build and upload a new version to HockeyApp"
  lane :deploy_app do |options|

    # Setup the options parameter
    build_variant = options[:build_variant].downcase
    branch = options[:branch]

    # Set the build variant to be able to read it during the exception emails
    ENV["SMF_BUILD_VARIANT"] = build_variant

    # Install Pods
    cocoapods

    # Deploy the app with HockeyApp etc.
    smf_deploy_app(
      build_variant: build_variant,
      build_variants_config: build_variants_config,
      branch: branch
      )

  end

  after_all do |lane|
    if lane == :deploy_app      
      smf_handle_success(
        build_variant: ENV["SMF_BUILD_VARIANT"],
        project_config: project_config
        )
    end
  end

  error do |lane, exception|
    if lane == :deploy_app
      smf_handle_exception(
        build_variant: ENV["SMF_BUILD_VARIANT"],
        project_config: project_config,
        exception: exception,
        )
    end
  end

end
